C51 COMPILER V9.00   TIMER                                                                 11/07/2015 14:53:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN ..\out\obj\timer.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ..\source\timer.c LARGE BROWSE INCDIR(..\OS;..\include) DEBUG
                    - OBJECTEXTEND PRINT(..\out\list\timer.lst) OBJECT(..\out\obj\timer.obj)

line level    source

   1          #include "sys.h"
   2          #include "timer.h"
   3          #include "uart.h"
   4          #include "WIFI.h"
   5          
   6          xdata uchar g_cTimerTableIndex;
   7          xdata TimerSever_t g_cTimerTable[TIMER_TABLE_MAX];
   8          /////////////////SYSTEM TICK SETTING//////////////////////////
   9          void TimerInit(void)
  10          {
  11   1              g_cTimerTableIndex = 0;
  12   1              SysTaskEnable(SYS_TIMER_TASK_ID, SYS_RUN_TASK_IMMEDIATELY);
  13   1      }
  14          
  15          ///////////////TIMER APPLICATION///////////////////////////////////////////////////
  16          TaskTimeout_t SysTimerUnitTask(void)
  17          {
  18   1              uchar cIndex;
  19   1              
  20   1              for(cIndex=0; cIndex<g_cTimerTableIndex; cIndex++)
  21   1              {       
  22   2                      if(g_cTimerTable[cIndex].iTimeOut > 0)
  23   2                      {
  24   3                              g_cTimerTable[cIndex].iTimeOut--;
  25   3                      }
  26   2                      else
  27   2                      {
  28   3                              if(*g_cTimerTable[cIndex].pName == 'H')
  29   3                              {
  30   4                                      HostMsgPost(g_cTimerTable[cIndex].Msg.msgID, g_cTimerTable[cIndex].Msg.Param);
  31   4                              }       
  32   3                              
  33   3                              if(cIndex != (g_cTimerTableIndex-1))
  34   3                              {
  35   4                                      g_cTimerTable[cIndex].Msg.msgID = g_cTimerTable[g_cTimerTableIndex-1].Msg.msgID;
  36   4                                      g_cTimerTable[cIndex].Msg.Param = g_cTimerTable[g_cTimerTableIndex-1].Msg.Param;
  37   4                                      g_cTimerTable[cIndex].pName = g_cTimerTable[g_cTimerTableIndex-1].pName;
  38   4                              }
  39   3      
  40   3                              if(g_cTimerTableIndex != 0)
  41   3                              {
  42   4                                      g_cTimerTableIndex--;
  43   4                              }
  44   3                      }
  45   2              }
  46   1      
  47   1              return SYS_RUN_TASK_IMMEDIATELY;
  48   1      }
  49          
  50          void TimerUnitDel(unsigned char *pName)
  51          {
  52   1              uchar cIndex;
  53   1      
  54   1              for(cIndex=0; cIndex<g_cTimerTableIndex; cIndex++)
C51 COMPILER V9.00   TIMER                                                                 11/07/2015 14:53:11 PAGE 2   

  55   1              {       
  56   2                      if((*(g_cTimerTable[cIndex].pName++)==*pName++)
  57   2                              &&(*g_cTimerTable[cIndex].pName==*pName))
  58   2                      {
  59   3                              if(cIndex != (g_cTimerTableIndex-1))
  60   3                              {
  61   4                                      g_cTimerTable[cIndex].pName = g_cTimerTable[g_cTimerTableIndex-1].pName;
  62   4                                      g_cTimerTable[cIndex].Msg.msgID = g_cTimerTable[g_cTimerTableIndex-1].Msg.msgID;
  63   4                                      g_cTimerTable[cIndex].Msg.Param = g_cTimerTable[g_cTimerTableIndex-1].Msg.Param;
  64   4                              }
  65   3      
  66   3                              if(g_cTimerTableIndex != 0)
  67   3                              {
  68   4                                      g_cTimerTableIndex--;
  69   4                              }
  70   3                      }
  71   2              }
  72   1      }
  73          
  74          void TimerUnitAdd(unsigned char *pName, MSG_t *pMsg, TimeOutVal_t Timeout)
  75          {
  76   1              //SysPrintf("\r\nTimerUnitAdd.");
  77   1              if(g_cTimerTableIndex >= TIMER_TABLE_MAX)
  78   1              {
  79   2                      //SysPrintf("\r\nTimerUnitAdd1.");
  80   2                      return;
  81   2              }
  82   1              else
  83   1              {
  84   2                      g_cTimerTable[g_cTimerTableIndex].pName = pName;
  85   2                      g_cTimerTable[g_cTimerTableIndex].Msg.msgID = pMsg->msgID;
  86   2                      g_cTimerTable[g_cTimerTableIndex].Msg.Param= pMsg->Param;
  87   2                      g_cTimerTable[g_cTimerTableIndex].iTimeOut = Timeout;
  88   2                      SysPrintf("\r\ntimer pMsg->msgID = %xi\r\npMsg->Param = %xi", pMsg->msgID, pMsg->Param);
  89   2                      g_cTimerTableIndex++;
  90   2              }       
  91   1      }
  92          
  93          void SetTimeout(unsigned char *pName, MSG_t Msg, TimeOutVal_t Timeout)
  94          {
  95   1              TimerUnitDel(pName);
  96   1              TimerUnitAdd(pName, &Msg, Timeout);
  97   1      }
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    850    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =     55      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
