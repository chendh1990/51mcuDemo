C51 COMPILER V9.00   LED                                                                   11/07/2015 14:53:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN ..\out\obj\LED.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ..\source\LED.C LARGE BROWSE INCDIR(..\OS;..\include) DEBUG O
                    -BJECTEXTEND PRINT(..\out\list\LED.lst) OBJECT(..\out\obj\LED.obj)

line level    source

   1          #include "sys.h"
   2          #include "led.h"
   3          #include "uart.h"
   4          
   5          xdata LED_Var_t g_LedVar;
   6          
   7          void LedRefresh(void)
   8          {
   9   1              if(g_LedVar.SOSBlinkMode == LED_NO_BLINK)
  10   1              {
  11   2                      p_SOS_LED = (g_LedVar.SOSStatus==LED_ON) ? LEVEL_HIGH : LEVEL_LOW;
  12   2              }
  13   1              else
  14   1              {
  15   2                      p_SOS_LED = (g_LedVar.SOSBlinkStatus==LED_ON) ? LEVEL_HIGH : LEVEL_LOW;
  16   2              }
  17   1      
  18   1              if(g_LedVar.SetBlinkMode == LED_NO_BLINK)
  19   1              {
  20   2                      p_SET_LED = (g_LedVar.SetStatus==LED_ON) ? LEVEL_LOW : LEVEL_HIGH;
  21   2              }
  22   1              else
  23   1              {
  24   2                      p_SET_LED = (g_LedVar.SetBlinkStatus==LED_ON) ? LEVEL_LOW : LEVEL_HIGH;
  25   2              }
  26   1      
  27   1              if(g_LedVar.WifiBlinkMode == LED_NO_BLINK)
  28   1              {
  29   2                      p_WIFI_LED = (g_LedVar.WifiStatus==LED_ON) ? LEVEL_LOW : LEVEL_HIGH;
  30   2              }
  31   1              else
  32   1              {
  33   2                      p_WIFI_LED = (g_LedVar.WifiBlinkStatus==LED_ON) ? LEVEL_LOW : LEVEL_HIGH;
  34   2              }       
  35   1      
  36   1      }
  37          
  38          void LedInit(void)
  39          {
  40   1      #ifdef HW_T0_1 
  41   1      ///////p_SOS_LED///////
  42   1              P2M0 |= 0x01;
  43   1              P2M1 &= 0xfe;
  44   1      #else
              ///////p_SOS_LED///////
                      P3M0 |= 0x80;
                      P3M1 &= 0x7F;
              #endif  
  49   1      ///////p_SET_LED///////
  50   1              P2M0 |= 0x02;
  51   1              P2M1 &= 0xFD;   
  52   1      ///////p_WIFI_LED///////
  53   1              P1M0 |= 0x04;
  54   1              P1M1 &= 0xFB;   
C51 COMPILER V9.00   LED                                                                   11/07/2015 14:53:12 PAGE 2   

  55   1              
  56   1              g_LedVar.SOSStatus = LED_OFF;
  57   1              g_LedVar.SetStatus = LED_OFF;
  58   1              g_LedVar.WifiStatus = LED_OFF;
  59   1      
  60   1              g_LedVar.SOSBlinkMode = LED_NO_BLINK;
  61   1              g_LedVar.SetBlinkMode = LED_NO_BLINK;
  62   1              g_LedVar.WifiBlinkMode = LED_NO_BLINK;
  63   1      
  64   1              g_LedVar.BlinkSynchroton = 0;
  65   1              SysTaskEnable(LED_TASK_ID, SYS_RUN_TASK_IMMEDIATELY);
  66   1      }
  67          
  68          void LedIndicator(Led_Index_t LedIndex, Led_Status_t OnOrOff)
  69          {
  70   1              switch(LedIndex)
  71   1              {
  72   2                      case LED_SOS_INDICATOR:
  73   2                              g_LedVar.SOSStatus = OnOrOff;
  74   2                              break;
  75   2      
  76   2                      case LED_SET_INDICATOR:
  77   2                              g_LedVar.SetStatus = OnOrOff;
  78   2                              break;
  79   2      
  80   2                      case LED_WIFI_INDICATOR:
  81   2                              g_LedVar.WifiStatus = OnOrOff;
  82   2                              break;                  
  83   2              }
  84   1              
  85   1              LedRefresh();
  86   1      }
  87          
  88          void LedBlinkSet(Led_Index_t LedIndex, Led_Blink_Mode_t LedBlinkMode)
  89          {
  90   1              switch(LedIndex)
  91   1              {
  92   2                      case LED_SOS_INDICATOR:
  93   2                              g_LedVar.SOSBlinkMode = LedBlinkMode;
  94   2                              break;
  95   2      
  96   2                      case LED_SET_INDICATOR:
  97   2                              g_LedVar.SetBlinkMode = LedBlinkMode;
  98   2                              break;
  99   2      
 100   2                      case LED_WIFI_INDICATOR:
 101   2                              g_LedVar.WifiBlinkMode = LedBlinkMode;
 102   2                              break;                  
 103   2              }       
 104   1      
 105   1              g_LedVar.BlinkSynchroton = 0;
 106   1      }
 107          
 108          void LedSysStatusIndicate(void)
 109          {
 110   1              if(g_SystemParam.SystemStatus == SYSTEM_DISARMED_STATUS)
 111   1              {
 112   2                      LedBlinkSet(LED_SYS_STATUS_INDICATOR, LED_NO_BLINK);
 113   2                      LedIndicator(LED_SYS_STATUS_INDICATOR, LED_OFF);
 114   2              }
 115   1              else if(g_SystemParam.SystemStatus == SYSTEM_ARMED_STATUS)
 116   1              {
C51 COMPILER V9.00   LED                                                                   11/07/2015 14:53:12 PAGE 3   

 117   2                      LedBlinkSet(LED_SYS_STATUS_INDICATOR, LED_NO_BLINK);
 118   2                      LedIndicator(LED_SYS_STATUS_INDICATOR, LED_ON);
 119   2              }
 120   1              else if(g_SystemParam.SystemStatus == SYSTEM_HOME_ARMED_STATUS)
 121   1              {
 122   2                      LedBlinkSet(LED_SYS_STATUS_INDICATOR, LED_SLOW_BLINK);
 123   2              }
 124   1      }
 125          
 126          
 127          void LedCloseZoneBlink(void)
 128          {
 129   1              LedBlinkSet(LED_SOS_INDICATOR, LED_NO_BLINK);
 130   1              LedSysStatusIndicate();
 131   1      }
 132          
 133          void LedAlarmIndicate(MSG_t *pMsg)
 134          {
 135   1              switch(pMsg->msgID)
 136   1              {
 137   2                      case SYS_MSG_HOST_SOS_ALARM:
 138   2                      case SYS_MSG_RF_SOS_CMD:
 139   2                      case SYS_MSG_RF_ACCESSORY_TAMPER:
 140   2                      case SYS_MSG_RF_24HOUR_ZONE:
 141   2                              LedBlinkSet(LED_SOS_INDICATOR, LED_FAST_BLINK);
 142   2                              break;
 143   2      
 144   2                      default:
 145   2                              LedBlinkSet(LED_SOS_INDICATOR, LED_FAST_BLINK);
 146   2                              break;
 147   2              }
 148   1      }
 149          
 150          void LedAllOff(void)
 151          {
 152   1              p_SOS_LED = LEVEL_LOW;
 153   1              p_SET_LED = LEVEL_HIGH;
 154   1              p_WIFI_LED = LEVEL_HIGH;
 155   1      }
 156          
 157          TaskTimeout_t LedBlink(void)
 158          {
 159   1              static bit Flag=0;
 160   1      
 161   1              if(g_LedVar.BlinkSynchroton == 0)
 162   1              {
 163   2                      Flag = 1;
 164   2              }
 165   1              
 166   1              if(Flag)
 167   1              {
 168   2                      if(g_LedVar.BlinkSynchroton == 20)
 169   2                      {
 170   3                              g_LedVar.BlinkSynchroton = 0;
 171   3                      }
 172   2                      g_LedVar.BlinkSynchroton++;
 173   2      //////////////////////sos led//////////////////////////////             
 174   2                      if(g_LedVar.SOSBlinkMode == LED_SLOW_BLINK)
 175   2                      {
 176   3                              if(g_LedVar.BlinkSynchroton == 1)
 177   3                              {
 178   4                                      g_LedVar.SOSBlinkStatus = LED_ON;
C51 COMPILER V9.00   LED                                                                   11/07/2015 14:53:12 PAGE 4   

 179   4                              }
 180   3                      }
 181   2                      else
 182   2                      {
 183   3                              g_LedVar.SOSBlinkStatus = LED_ON;
 184   3                      }
 185   2      //////////////////////set led//////////////////////////////     
 186   2                      if(g_LedVar.SetBlinkMode == LED_SLOW_BLINK)
 187   2                      {
 188   3                              if(g_LedVar.BlinkSynchroton == 1)
 189   3                              {
 190   4                                      g_LedVar.SetBlinkStatus = LED_ON;
 191   4                              }
 192   3                      }
 193   2                      else
 194   2                      {
 195   3                              g_LedVar.SetBlinkStatus = LED_ON;
 196   3                      }
 197   2      //////////////////////wifi led//////////////////////////////    
 198   2                      if(g_LedVar.WifiBlinkMode == LED_SLOW_BLINK)
 199   2                      {
 200   3                              if(g_LedVar.BlinkSynchroton == 1)
 201   3                              {
 202   4                                      g_LedVar.WifiBlinkStatus = LED_ON;
 203   4                              }
 204   3                      }
 205   2                      else
 206   2                      {
 207   3                              g_LedVar.WifiBlinkStatus = LED_ON;
 208   3                      }               
 209   2              }
 210   1              else
 211   1              {
 212   2                      g_LedVar.SOSBlinkStatus = LED_OFF;
 213   2                      g_LedVar.SetBlinkStatus = LED_OFF;
 214   2                      g_LedVar.WifiBlinkStatus = LED_OFF;
 215   2              }
 216   1              Flag = ~Flag;
 217   1              
 218   1              return LED_REFRESH_TIME;
 219   1      }
 220          
 221          TaskTimeout_t LedTask(void)
 222          {
 223   1              TaskTimeout_t TimeToRun;
 224   1      
 225   1              TimeToRun = LedBlink();
 226   1              LedRefresh();
 227   1              
 228   1              return TimeToRun;
 229   1      }
 230          
 231          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    586    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.00   LED                                                                   11/07/2015 14:53:12 PAGE 5   

   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
